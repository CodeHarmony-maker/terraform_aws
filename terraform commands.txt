// init
terraform init (install provider you used like: aws, kubernetes, Jenkins)

// apply
terraform apply (apply all changes in terraform file)
    terraform apply -auto-approve (apply changes without your confirmation immediately )
    terraform apply -var-file terraform-dev.tfvars (apply changes with different environment variables file like dev, sage and prod)

// destory
terraform destroy (destory complete infrastructure of terraform file, remove resourcses one by one in order)
    terraform destroy -target aws_subnet.dev-subnet-2 (instead using this command, remove code from terraform file and run command "terraform apply")

// plan
terraform plan (check difference between current state and desired state)

// state
terraform state
    terraform state list (list of resources in the state)
    terraform state show aws_subnet.dev-subnet-1 (show specific resource)
    terraform state mv (move an item in the state)
    terraform state pull (pull current state and output to stdout)
    terraform state push (update remote state from a local state file)
    terraform state replace-provider (replace provider in the state)
    terraform state rm (remove instances from the state)

// add AWS credential by commond line
export AWS_SECRET_ACCESS_KEY=secret_key
export AWS_ACCESS_KEY_IS=access_key
export AWS_DEFAULT_REGION="us-west-2"

// get AWS credential which were set by command line in terminal
env | grep AWS

// set AWS credential in our operating system (first install AWS cli to run command one)
    aws configure
    now add access_key, secret_key and region value and set it globally in your system

// add custom environment variable through command line interface (use varaible name in file after the text "TF_VAR_")
    export TF_VAR_avail_zone="eu-west-3a"